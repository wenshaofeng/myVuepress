(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{248:function(t,i,a){t.exports=a.p+"assets/img/DVCS.d5323873.png"},249:function(t,i,a){t.exports=a.p+"assets/img/others.41627768.png"},250:function(t,i,a){t.exports=a.p+"assets/img/git_way.ba49d017.png"},277:function(t,i,a){"use strict";a.r(i);var s=a(28),_=Object(s.a)({},(function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"git-概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-概览"}},[t._v("#")]),t._v(" Git 概览")]),t._v(" "),s("ul",[s("li",[t._v("分布式版本控制")]),t._v(" "),s("li",[t._v("记录快照，而非差异比较")]),t._v(" "),s("li",[t._v("本地仓库用于版本控制")]),t._v(" "),s("li",[t._v("远程仓库用于同步及协作")]),t._v(" "),s("li",[t._v("多数操作为添加数据")]),t._v(" "),s("li",[t._v("丰富的分支管理功能")])]),t._v(" "),s("h3",{attrs:{id:"分布式版本控制-源代码管理器）（大概概念）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式版本控制-源代码管理器）（大概概念）"}},[t._v("#")]),t._v(" 分布式版本控制 / 源代码管理器）（大概概念）")]),t._v(" "),s("p",[s("strong",[t._v("版本控制系统")]),t._v("（简称 "),s("strong",[t._v("VCS")]),t._v("）是一个管理源代码不同版本的工具。"),s("strong",[t._v("源代码管理器")]),t._v("（简称 "),s("strong",[t._v("SCM")]),t._v("）是版本控制系统的另一个名称。")]),t._v(" "),s("p",[t._v("Git 是一个 SCM（因此也是 VCS！）。Git 网站的 URL 是 "),s("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-scm.com/"),s("OutboundLink")],1),t._v(" （注意它的域名中直接包含“SCM”！）。")]),t._v(" "),s("p",[t._v("像 Git，Mercurial，Bazaar 以及 Darcs 等，**客户端并不只提取最新版本的文件快照，而是把代码仓库完整地镜像下来。**这么一来，任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复。因为每一次的提取操作，实际上都是一次对代码仓库的完整备份")]),t._v(" "),s("p",[s("img",{attrs:{src:a(248),alt:""}})]),t._v(" "),s("h4",{attrs:{id:"优点与缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点与缺点"}},[t._v("#")]),t._v(" 优点与缺点")]),t._v(" "),s("p",[t._v("分布式 VCS 的优点有：")]),t._v(" "),s("ol",[s("li",[t._v("大多数的操作可以在本地进行，所以速度更快，而且由于无需联网，所以即使不在公司甚至没有在联网，你也可以提交代码、查看历史，从而极大地减小了开发者的网络条件和物理位置的限制（例如，你可以在飞机上提交代码、切换分支等等）；")]),t._v(" "),s("li",[t._v("由于可以提交到本地，所以你可以分步提交代码，把代码提交做得更细，而不是一个提交包含很多代码，难以 review 也难以回溯。")])]),t._v(" "),s("p",[t._v("分布式 VCS 的缺点：")]),t._v(" "),s("ol",[s("li",[t._v("由于每一个机器都有完整的本地仓库，所以初次获取项目（Git 术语：clone）的时候会比较耗时；")]),t._v(" "),s("li",[t._v("由于每个机器都有完整的本地仓库，所以本地占用的存储比中央式 VCS 要高。")])]),t._v(" "),s("blockquote",[s("p",[t._v("对于一般的程序项目而言，由于项目的大多数内容都是文本形式的代码，所以工程的体积都并不是很大，再加上文本内容自身的特点，VCS 可以利用算法来把仓库的体积极大地压缩。这就导致，在实际中，Git 等分布式 VCS 的仓库体积并不大，初次获取项目的耗时和本地仓库的存储占用都很小。所以对于大多数的程序项目而言，分布式 VCS 「尺寸大、初次下载慢」的问题其实并不严重。")])]),t._v(" "),s("blockquote",[s("p",[t._v("不过也有一些例外，比如游戏开发。游戏的开发中有大量的大尺寸数据和媒体文件，并且这些文件的格式也不容易压缩尺寸，如果用分布式 VCS 会导致仓库的体积非常庞大。所以一些大型游戏的开发会选择中央式的 VCS 来管理代码。")])]),t._v(" "),s("h3",{attrs:{id:"文件的三种状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件的三种状态"}},[t._v("#")]),t._v(" 文件的三种状态")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2391503317,2295283142&fm=26&gp=0.jpg",alt:""}})]),t._v(" "),s("p",[t._v("文件状态有下面这几种：")]),t._v(" "),s("ul",[s("li",[t._v("Untracked: 未跟踪，一般为新增文件，此文件在文件夹中，但并没有加入到 git 库，不参与版本控制。通过 git add 状态变为 Staged.")]),t._v(" "),s("li",[t._v("Modified: 文件已修改，仅仅是修改，并没有进行其他的操作.")]),t._v(" "),s("li",[t._v("deleted： 文件已删除，本地删除，服务器上还没有删除.")]),t._v(" "),s("li",[t._v("renamed：文件名称被改变")])]),t._v(" "),s("h4",{attrs:{id:"working-directory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#working-directory"}},[t._v("#")]),t._v(" Working directory")]),t._v(" "),s("ul",[s("li",[t._v("工作目录")]),t._v(" "),s("li",[t._v("通过checkout从本地仓库提取")]),t._v(" "),s("li",[t._v("可直接修改")])]),t._v(" "),s("h4",{attrs:{id:"staging-area"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#staging-area"}},[t._v("#")]),t._v(" Staging area")]),t._v(" "),s("ul",[s("li",[t._v("缓存区域")]),t._v(" "),s("li",[t._v("通过git add/remove来修改")])]),t._v(" "),s("h4",{attrs:{id:"repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repository"}},[t._v("#")]),t._v(" Repository")]),t._v(" "),s("ul",[s("li",[t._v("本地仓库")]),t._v(" "),s("li",[t._v("通过commit提交版本")]),t._v(" "),s("li",[t._v("通过reset/merge进行变更")])]),t._v(" "),s("h3",{attrs:{id:"远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[t._v("#")]),t._v(" 远程仓库")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1536601302768&di=417275dc1b9909932edb8b62c21638e4&imgtype=0&src=http%3A%2F%2Fimages.cnblogs.com%2Fcnblogs_com%2Fwupeiqi%2F662608%2Fo_git.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("通过push推送版本至远程仓库")]),t._v(" "),s("li",[t._v("通过fetch拉去版本至本地仓库")]),t._v(" "),s("li",[t._v("pull = fetch + merge")])]),t._v(" "),s("h3",{attrs:{id:"git-直接保存快照而不是文件差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-直接保存快照而不是文件差异"}},[t._v("#")]),t._v(" Git 直接保存快照而不是文件差异")]),t._v(" "),s("ul",[s("li",[t._v("其他\n"),s("img",{attrs:{src:a(249),alt:""}})]),t._v(" "),s("li",[t._v("Git\n"),s("img",{attrs:{src:a(250),alt:""}})])]),t._v(" "),s("h3",{attrs:{id:"git-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-配置"}},[t._v("#")]),t._v(" git 配置")]),t._v(" "),s("p",[t._v("一般在新的系统上，都要先配置 git 的工作环境，配置工作只需一次")]),t._v(" "),s("p",[t._v("Git 提供了一个叫做 git config 的工具（译注：实际是 git-config 命令，只不过可以通过 git 加一个名字来呼叫此命令。），专门用来配置或读取相应的工作环境变量。而正是由这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。这些变量可以存放在以下三个不同的地方：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/etc/gitconfig")]),t._v(" 文件：系统中对所有用户都普遍适用的配置。若使用 "),s("code",[t._v("git config")]),t._v(" 时用 --system 选项，读写的就是这个文件。")]),t._v(" "),s("li",[s("code",[t._v("~/.gitconfig")]),t._v(" 文件：用户目录下的配置文件只适用于该用户。若使用 git config 时用 --global 选项，读写的就是这个文件。")]),t._v(" "),s("li",[t._v("当前项目的 git 目录中的配置文件（也就是工作目录中的 "),s("code",[t._v(".git/config")]),t._v(" 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 "),s("code",[t._v(".git/config")]),t._v(" 里的配置会覆盖 "),s("code",[t._v("/etc/gitconfig")]),t._v(" 中的同名变量。")])]),t._v(" "),s("p",[t._v("在 Windows 系统上，Git 会找寻用户主目录下的 "),s("code",[t._v(".gitconfig")]),t._v(" 文件。主目录即 "),s("code",[t._v("$HOME")]),t._v(" 变量指定的目录，一般都是 "),s("code",[t._v("C:\\Documents and Settings\\$USER")]),t._v("。此外，Git 还会尝试找寻 "),s("code",[t._v("/etc/gitconfig")]),t._v(" 文件，只不过看当初 Git 装在什么目录，就以此作为根目录来定位。")]),t._v(" "),s("h4",{attrs:{id:"查看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看"}},[t._v("#")]),t._v(" 查看")]),t._v(" "),s("p",[s("code",[t._v("git config --list")]),t._v(" 已有\n"),s("code",[t._v("git config user.name")]),t._v(" 查看特定")]),t._v(" "),s("h4",{attrs:{id:"用户信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户信息"}},[t._v("#")]),t._v(" 用户信息")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John Doe"')]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email johndoe@example.com\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[t._v("#")]),t._v(" 分支")])])}),[],!1,null,null,null);i.default=_.exports}}]);