(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{353:function(s,n,a){"use strict";a.r(n);var e=a(28),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"与-vue-cli-2-x-的差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-vue-cli-2-x-的差异"}},[s._v("#")]),s._v(" 与 vue-cli 2.x 的差异")]),s._v(" "),a("p",[s._v("与 2.x 相比，3.x 提供了一种开箱即用的模式，即我们无需配置 webpack 就可以运行项目，并且它提供了一个 vue.config.js 文件来满足开发者对其封装的 webpack 默认配置的修改。如图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/7/22/164c05d8ad965059?w=797&h=584&f=png&s=32393",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"vue-config-js-一些常用配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-config-js-一些常用配置"}},[s._v("#")]),s._v(" vue.config.js 一些常用配置")]),s._v(" "),a("h4",{attrs:{id:"a-baseurl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-baseurl"}},[s._v("#")]),s._v(" a. baseurl")]),s._v(" "),a("p",[s._v("想要将项目地址加一个二级目录，比如："),a("code",[s._v("http://localhost:8080/vue/")]),s._v("，那么我们需要在 vue.config.js 里配置 baseurl 这一项：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vue.config.js")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n    \n    baseUrl"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("其改变的其实是 webpack 配置文件中 output 的 "),a("code",[s._v("publicPath")]),s._v(" 项，这时候你重启终端再次打开页面的时候我们首页的 url 就会变成带二级目录的形式。")]),s._v(" "),a("h4",{attrs:{id:"b-outputdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-outputdir"}},[s._v("#")]),s._v(" b. outputDir")]),s._v(" "),a("p",[s._v("如果你想将构建好的文件打包输出到 output 文件夹下（默认是 dist 文件夹），你可以配置：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// vue.config.js\nmodule.exports = {\n    ...\n    \n    outputDir: 'output',\n    \n    ...\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("然后运行命令 "),a("code",[s._v("yarn build")]),s._v(" 进行打包输出，你会发现项目跟目录会创建 output 文件夹， 这其实改变了 webpack 配置中 output 下的 "),a("code",[s._v("path")]),s._v(" 项，修改了文件的输出路径。")]),s._v(" "),a("h4",{attrs:{id:"c-productionsourcemap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-productionsourcemap"}},[s._v("#")]),s._v(" c. productionSourceMap")]),s._v(" "),a("p",[s._v("该配置项用于设置是否为生产环境构建生成 source map，一般在生产环境下为了快速定位错误信息，我们都会开启 source map：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// vue.config.js\nmodule.exports = {\n    ...\n    \n    productionSourceMap: true,\n    \n    ...\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("该配置会修改 webpack 中 "),a("code",[s._v("devtool")]),s._v(" 项的值为 "),a("code",[s._v("source-map")]),s._v("。")]),s._v(" "),a("p",[s._v("开启 source map 后，我们打包输出的文件中会包含 js 对应的 .map 文件，其用途可以参考："),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2013/01/javascript_source_map.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript Source Map 详解"),a("OutboundLink")],1)]),s._v(" "),a("h4",{attrs:{id:"d-chainwebpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#d-chainwebpack"}},[s._v("#")]),s._v(" d. chainWebpack")]),s._v(" "),a("p",[s._v("chainWebpack 配置项允许我们更细粒度的控制 webpack 的内部配置，其集成的是 "),a("a",{attrs:{href:"https://github.com/mozilla-neutrino/webpack-chain",target:"_blank",rel:"noopener noreferrer"}},[s._v("webpack-chain"),a("OutboundLink")],1),s._v(" 这一插件，该插件可以让我们能够使用链式操作来修改配置，比如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 用于做相应的合并处理\nconst merge = require('webpack-merge');\n\nmodule.exports = {\n    ...\n    \n    // config 参数为已经解析好的 webpack 配置\n    chainWebpack: config => {\n        config.module\n            .rule('images')\n            .use('url-loader')\n            .tap(options =>\n                merge(options, {\n                  limit: 5120,\n                })\n            )\n    }\n    \n    ...\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[s._v("以上操作我们可以成功修改 webpack 中 module 项里配置 rules 规则为图片下的 url-loader 值，将其 limit 限制改为 5M，修改后的 webpack 配置代码如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{\n    ...\n    \n    module: {\n        rules: [\n            {   \n                /* config.module.rule('images') */\n                test: /\\.(png|jpe?g|gif|webp)(\\?.*)?$/,\n                use: [\n                    /* config.module.rule('images').use('url-loader') */\n                    {\n                        loader: 'url-loader',\n                        options: {\n                            limit: 5120,\n                            name: 'img/[name].[hash:8].[ext]'\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n    \n    ...\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[s._v("这里需要注意的是我们使用了 webpack-merge 这一插件，该插件用于做 webpack 配置的合并处理，这样 options 下面的其他值就不会被覆盖或改变。")]),s._v(" "),a("p",[s._v("关于 webpack-chain 的使用可以参考其 github 官方地址："),a("a",{attrs:{href:"https://github.com/mozilla-neutrino/webpack-chain",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/mozilla-neutrino/webpack-chain"),a("OutboundLink")],1),s._v("，它提供了操作类似 JavaScript Set 和 Map 的方式，以及一系列速记方法。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/10/30/166c58e690ddb43d?w=557&h=398&f=png&s=59904",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"e-configurewebpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e-configurewebpack"}},[s._v("#")]),s._v(" e. configureWebpack")]),s._v(" "),a("p",[s._v("除了上述使用 chainWebpack 来改变 webpack 内部配置外，我们还可以使用 configureWebpack 来进行修改，两者的不同点在于 chainWebpack 是链式修改，而 configureWebpack 更倾向于整体替换和修改。示例代码如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// vue.config.js\nmodule.exports = {\n    ...\n    \n    // config 参数为已经解析好的 webpack 配置\n    configureWebpack: config => {\n        // config.plugins = []; // 这样会直接将 plugins 置空\n        \n        // 使用 return 一个对象会通过 webpack-merge 进行合并，plugins 不会置空\n        return {\n            plugins: []\n        }\n    }\n    \n    ...\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("configureWebpack 可以直接是一个对象，也可以是一个函数，如果是对象它会直接使用 webpack-merge 对其进行合并处理，如果是函数，你可以直接使用其 config 参数来修改 webpack 中的配置，或者返回一个对象来进行 merge 处理。")]),s._v(" "),a("p",[s._v("你可以在项目目录下运行 "),a("code",[s._v("vue inspect")]),s._v(" 来查看你修改后的 webpack 完整配置，当然你也可以缩小审查范围，比如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 只查看 plugins 的内容\nvue inspect plugins\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"f-devserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#f-devserver"}},[s._v("#")]),s._v(" f. devServer")]),s._v(" "),a("p",[s._v("vue.config.js 还提供了 devServer 项用于配置 webpack-dev-server 的行为，使得我们可以对本地服务器进行相应配置，我们在命令行中运行的 "),a("code",[s._v("yarn serve")]),s._v(" 对应的命令 "),a("code",[s._v("vue-cli-service serve")]),s._v(" 其实便是基于 webpack-dev-server 开启的一个本地服务器，其常用配置参数如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// vue.config.js\nmodule.exports = {\n    ...\n    \n    devServer: {\n        open: true, // 是否自动打开浏览器页面\n        host: '0.0.0.0', // 指定使用一个 host。默认是 localhost\n        port: 8080, // 端口地址\n        https: false, // 使用https提供服务\n        proxy: null, // string | Object 代理设置\n        \n        // 提供在服务器内部的其他中间件之前执行自定义中间件的能力\n        before: app => {\n          // `app` 是一个 express 实例\n        }\n    }\n    \n    ...\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[s._v("以上讲解了 vue.config.js 中一些常用的配置项功能，具体的配置实现需要结合实际项目进行，完整的配置项可以查看："),a("a",{attrs:{href:"https://github.com/vuejs/vue-cli/blob/ce3e2d475d63895cbb40f62425bb6b3237469bcd/docs/zh/config/README.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("vue.config.js"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"环境变量env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境变量env"}},[s._v("#")]),s._v(" 环境变量env")]),s._v(" "),a("p",[s._v("一般一个项目都会有以下 3 种环境：")]),s._v(" "),a("ul",[a("li",[s._v("开发环境（开发阶段，本地开发版本，一般会使用一些调试工具或额外的辅助功能）")]),s._v(" "),a("li",[s._v("测试环境（测试阶段，上线前版本，除了一些 bug 的修复，基本不会和上线版本有很大差别）")]),s._v(" "),a("li",[s._v("生产环境（上线阶段，正式对外发布的版本，一般会进行优化，关掉错误报告）")])]),s._v(" "),a("h4",{attrs:{id:"_1-配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-配置文件"}},[s._v("#")]),s._v(" 1. 配置文件")]),s._v(" "),a("p",[s._v("正确的配置环境首先需要我们认识不同环境配置之间的关系，如图所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/25/16749778e85b5370?w=356&h=318&f=png&s=24190",alt:""}})]),s._v(" "),a("p",[s._v("我们从上图中可以了解到每一个环境其实有其不同的配置，同时它们也存在着交集部分，交集便是它们都共有的配置项，那么在 Vue 中我们应该如何处理呢？")]),s._v(" "),a("p",[s._v("我们可以在根目录下创建以下形式的文件进行不同环境下变量的配置：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(".env                # 在所有的环境中被载入\n.env.local          # 在所有的环境中被载入，但会被 git 忽略\n.env.[mode]         # 只在指定的模式中被载入\n.env.[mode].local   # 只在指定的模式中被载入，但会被 git 忽略\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("比如我们创建一个名为 .env.stage 的文件，该文件表明其只在 stage 环境下被加载，在这个文件中，我们可以配置如下键值对的变量：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("NODE_ENV=stage\nVUE_APP_TITLE=stage mode\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这时候我们怎么在 vue.config.js 中访问这些变量呢？很简单，使用 "),a("code",[s._v("process.env.[name]")]),s._v(" 进行访问就可以了，比如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// vue.config.js\n\nconsole.log(process.env.NODE_ENV); // development（在终端输出）\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("当你运行 "),a("code",[s._v("yarn serve")]),s._v(" 命令后会发现输出的是 development，因为 "),a("code",[s._v("vue-cli-service serve")]),s._v(" 命令默认设置的环境是 development，你需要修改 package.json 中的 serve 脚本的命令为：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('"scripts": {\n    "serve": "vue-cli-service serve --mode stage",\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("code",[s._v("--mode stage")]),s._v(" 其实就是修改了 webpack 4 中的 mode 配置项为 stage，同时其会读取对应 "),a("code",[s._v(".env.[model]")]),s._v(" 文件下的配置，如果没找到对应配置文件，其会使用默认环境 development，同样 "),a("code",[s._v("vue-cli-service build")]),s._v(" 会使用默认环境 production。")]),s._v(" "),a("p",[s._v("这时候如果你再创建一个 .env 的文件，再次配置重复的变量，但是值不同，如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("NODE_ENV=staging\nVUE_APP_TITLE=staging mode\nVUE_APP_NAME=project\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("因为 .env 文件会被所有环境加载，即公共配置，那么最终我们运行 "),a("code",[s._v("vue-cli-service serve")]),s._v(" 打印出来的是哪个呢？答案是 "),a("strong",[s._v("stage")]),s._v("，但是如果是 .env.stage.local 文件中配置成上方这样，答案便是 "),a("strong",[s._v("staging")]),s._v("，所以 "),a("code",[s._v(".env.[model],local")]),s._v(" 会覆盖 "),a("code",[s._v(".env.[model]")]),s._v(" 下的相同配置。同理 .env.local 会覆盖 .env 下的相同配置。")]),s._v(" "),a("p",[s._v("由此可以得出结论，相同配置项的权重：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(".env.[mode].local > .env.[mode] > .env.local > .env \n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("但是需要注意的是，除了相同配置项权重大的覆盖小的，不同配置项它们会进行合并操作，类似于 Javascript 中的 Object.assign 的用法。")]),s._v(" "),a("h4",{attrs:{id:"_2-环境注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-环境注入"}},[s._v("#")]),s._v(" 2. 环境注入")]),s._v(" "),a("p",[s._v("通过上述配置文件的创建，我们成功使用命令行的形式对项目环境进行了设置并可以自由切换，但是需要注意的是我们在 Vue 的前端代码中打印出的 "),a("code",[s._v("process.env")]),s._v(" 与 vue.config.js 中输出的可能是不一样的，这需要普及一个知识点：webpack 通过 DefinePlugin 内置插件将 process.env 注入到客户端代码中。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// webpack 配置\n{\n    ...\n    \n    plugins: [\n        new webpack.DefinePlugin({\n            'process.env': {\n                NODE_ENV: JSON.stringify(process.env.NODE_ENV)\n            }\n        }),\n    ],\n    \n    ...\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("由于 vue-cli 3.x 封装的 webpack 配置中已经帮我们完成了这个功能，所以我们可以直接在客户端代码中打印出 process.env 的值，该对象可以包含多个键值对，也就是说可以注入多个值，但是经过 CLI 封装后仅支持注入环境配置文件中以 "),a("code",[s._v("VUE_APP_")]),s._v(" 开头的变量，而 "),a("code",[s._v("NODE_ENV")]),s._v(" 和 "),a("code",[s._v("BASE_URL")]),s._v(" 这两个特殊变量除外。比如我们在权重最高的 .env.stage.local 文件中写入：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("NODE_ENV=stage2\nVUE_APP_TITLE=stage mode2\nNAME=vue\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("然后我们尝试在 vue.config.js 中打印 "),a("code",[s._v("process.env")]),s._v("，终端输出：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{\n    ...\n    \n    npm_config_ignore_scripts: '',\n    npm_config_version_git_sign: '',\n    npm_config_ignore_optional: '',\n    npm_config_init_version: '1.0.0',\n    npm_package_dependencies_vue_router: '^3.0.1',\n    npm_config_version_tag_prefix: 'v',\n    npm_node_execpath: '/usr/local/bin/node',\n    NODE_ENV: 'stage2',\n    VUE_APP_TITLE: 'stage mode2',\n    NAME: 'vue',\n    BABEL_ENV: 'development',\n    \n    ...\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("可以看到输出内容除了我们环境配置中的变量外还包含了很多 npm 的信息，但是我们在入口文件 main.js 中打印会发现输出：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n    "BASE_URL": "/vue/",\n    "NODE_ENV": "stage2",\n    "VUE_APP_TITLE": "stage mode2"\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("可见注入时过滤调了非 "),a("code",[s._v("VUE_APP_")]),s._v(" 开头的变量，其中多出的 "),a("code",[s._v("BASE_URL")]),s._v(" 为你在 vue.config.js 设置的值，默认为 /，其在环境配置文件中设置无效。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/25/167497acd942516e?w=544&h=308&f=png&s=32493",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"_3-额外配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-额外配置"}},[s._v("#")]),s._v(" 3. 额外配置")]),s._v(" "),a("p",[s._v("以上我们通过新建配置文件的方式为项目不同环境配置不同的变量值，能够实现项目基本的环境管理，但是 .env 这样的配置文件中的参数目前只支持静态值，无法使用动态参数，在某些情况下无法实现特定需求，这时候我们可以在根目录下新建 config 文件夹用于存放一些额外的配置文件。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/* 配置文件 index.js */\n\n// 公共变量\nconst com = {\n    IP: JSON.stringify('xxx')\n};\n\nmodule.exports = {\n\n    // 开发环境变量\n    dev: {\n    \tenv: {\n            TYPE: JSON.stringify('dev'),\n            ...com\n    \t}\n    },\n    \n    // 生产环境变量\n    build: {\n    \tenv: {\n            TYPE: JSON.stringify('prod'),\n            ...com\n    \t}\n    }\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("p",[s._v("上方代码我们把环境变量分为了公共变量、开发环境变量和生产环境变量，当然这些变量可能是动态的，比如用户的 ip 等。现在我们要在 vue.config.js 里注入这些变量，我们可以使用 chainWebpack 修改 DefinePlugin 中的值：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/* vue.config.js */\nconst configs = require('./config');\n\n// 用于做相应的 merge 处理\nconst merge = require('webpack-merge');\n\n// 根据环境判断使用哪份配置\nconst cfg = process.env.NODE_ENV === 'production' ? configs.build.env : configs.dev.env;\n\nmodule.exports = {\n    ...\n    \n    chainWebpack: config => {\n        config.plugin('define')\n            .tap(args => {\n                let name = 'process.env';\n                \n                // 使用 merge 保证原始值不变\n                args[0][name] = merge(args[0][name], cfg);\n    \n                return args\n            })\n    },\n\t\n    ...\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("p",[s._v("最后我们可以在客户端成功打印出包含动态配置的对象：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n    "NODE_ENV": "stage2",\n    "VUE_APP_TITLE": "stage mode2",\n    "BASE_URL": "/vue/",\n    "TYPE": "dev",\n    "IP": "xxx"\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"_4-实际场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-实际场景"}},[s._v("#")]),s._v(" 4. 实际场景")]),s._v(" "),a("p",[s._v("结合以上环境变量的配置，我们项目中一般会遇到一些实际场景： 比如在非线上环境我们可以给自己的移动端项目开启 "),a("a",{attrs:{href:"https://github.com/Tencent/vConsole",target:"_blank",rel:"noopener noreferrer"}},[s._v("vConsole"),a("OutboundLink")],1),s._v(" 调试，但是在线上环境肯定不需要开启这一功能，我们可以在入口文件中进行设置，代码如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/* main.js */\n\nimport Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\n\nVue.config.productionTip = false\n\n// 如果是非线上环境，加载 VConsole\nif (process.env.NODE_ENV !== 'production') {\n    var VConsole = require('vconsole/dist/vconsole.min.js');\n    var vConsole = new VConsole();\n}\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("vConsole 是一款用于移动网页的轻量级，可扩展的前端开发工具，可以看作是移动端浏览器的控制台，如图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/7/25/164d2204ddfd1384?w=320&h=568&f=png&s=57903",alt:""}})]),s._v(" "),a("p",[s._v("另外我们还可以使用配置中的 BASE_URL 来设置路由的 base 参数：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/* router.js */\n\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from './views/Home.vue'\nimport About from './views/About.vue'\n\nVue.use(Router)\n\nlet base = `${process.env.BASE_URL}`; // 获取二级目录\n\nexport default new Router({\n    mode: 'history',\n    base: base, // 设置 base 值\n    routes: [\n        {\n            path: '/',\n            name: 'home',\n            component: Home\n        },\n        {\n            path: '/about',\n            name: 'about',\n            component: About\n        }\n    ]\n})\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("p",[s._v("每一个环境变量你都可以用于项目的一些地方，它提供给了我们一种全局的可访问形式，也是基于 Node 开发的特性所在。")])])}),[],!1,null,null,null);n.default=t.exports}}]);