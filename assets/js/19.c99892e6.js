(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{279:function(t,e,s){"use strict";s.r(e);var a=s(28),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-分支"}},[t._v("#")]),t._v(" git 分支")]),t._v(" "),s("ul",[s("li",[t._v("分支其实就是从某个提交对象往回看的历史")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://git-scm.com/figures/18333fig0309-tn.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"分支创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支创建"}},[t._v("#")]),t._v(" 分支创建")]),t._v(" "),s("div",{staticClass:"language-console line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git branch testing\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://git-scm.com/book/en/v2/images/head-to-master.png",alt:""}})]),t._v(" "),s("p",[t._v("创建了一个分支的指针")]),t._v(" "),s("h2",{attrs:{id:"分支切换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支切换"}},[t._v("#")]),t._v(" 分支切换")]),t._v(" "),s("div",{staticClass:"language-con line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git checkout testing\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://git-scm.com/book/en/v2/images/head-to-testing.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"分支合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支合并"}},[t._v("#")]),t._v(" 分支合并")]),t._v(" "),s("h4",{attrs:{id:"fast-forward"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fast-forward"}},[t._v("#")]),t._v(" fast-forward")]),t._v(" "),s("p",[t._v("仅移动分支指针")]),t._v(" "),s("p",[s("strong",[t._v("前")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://git-scm.com/book/en/v2/images/basic-branching-4.png",alt:""}})]),t._v(" "),s("div",{staticClass:"language-console line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git checkout master\n$ git merge hotfix\nUpdating f42c576..3a0874c\nFast-forward\n index.html | 2 ++\n 1 file changed, 2 insertions(+)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("strong",[t._v("后")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://git-scm.com/book/en/v2/images/basic-branching-5.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并"}},[t._v("#")]),t._v(" 合并")]),t._v(" "),s("p",[s("strong",[t._v("前")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://git-scm.com/book/en/v2/images/basic-merging-1.png",alt:""}})]),t._v(" "),s("div",{staticClass:"language-console line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git checkout master\nSwitched to branch 'master'\n$ git merge iss53\nMerge made by the 'recursive' strategy.\nindex.html |    1 +\n1 file changed, 1 insertion(+)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("strong",[t._v("后")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://git-scm.com/book/en/v2/images/basic-merging-2.png",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Git 会使用两个分支的末端所指的快照（"),s("code",[t._v("C4")]),t._v(" 和 "),s("code",[t._v("C5")]),t._v("）以及这两个分支的工作祖先（"),s("code",[t._v("C2")]),t._v("），做一个简单的三方合并")])]),t._v(" "),s("li",[s("p",[t._v("Git 会自行决定选取哪一个提交作为最优的共同祖先，并以此作为合并的基础")])])]),t._v(" "),s("h4",{attrs:{id:"遇到冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遇到冲突"}},[t._v("#")]),t._v(" 遇到冲突")]),t._v(" "),s("div",{staticClass:"language-console line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git merge iss53\nAuto-merging index.html\nCONFLICT (content): Merge conflict in index.html\nAutomatic merge failed; fix conflicts and then commit the result.\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("自行解决冲突")]),t._v(" "),s("li",[t._v("推荐使用Jetbrain全家桶内置的git工具")])]),t._v(" "),s("h2",{attrs:{id:"分支变基"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支变基"}},[t._v("#")]),t._v(" 分支变基")]),t._v(" "),s("p",[t._v("回到两个分支最近的共同祖先，根据当前分支后续的历次提交对象，生成一系列文件补丁，然后以基底分支最后一个提交对象为新的出发点，逐个应用之前准备好的补丁文件，最后会生成一个新的合并提交对象，从而改写 提交历史。")]),t._v(" "),s("p",[s("strong",[t._v("前")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://git-scm.com/figures/18333fig0327-tn.png",alt:""}})]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git checkout experiment\n$ git rebase master\nFirst, rewinding head to replay your work on top of it...\nApplying: added staged command\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("后")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://git-scm.com/figures/18333fig0329-tn.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"风险"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#风险"}},[t._v("#")]),t._v(" 风险")]),t._v(" "),s("ul",[s("li",[t._v("变基会更改分支的commit路径")]),t._v(" "),s("li",[t._v("禁止对远程分支进行变基")])]),t._v(" "),s("h2",{attrs:{id:"git-cherry-pick"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-cherry-pick"}},[t._v("#")]),t._v(" git cherry-pick")]),t._v(" "),s("ul",[s("li",[t._v("选择另一个分支的commit在本分支重放")]),t._v(" "),s("li",[t._v("重放当个commit\n"),s("ul",[s("li",[s("code",[t._v("git cherry-pick <commit-id>")])])])]),t._v(" "),s("li",[t._v("重放多个commit\n"),s("ul",[s("li",[s("code",[t._v("git cherry-pick <commit-id-from> <commit-id-to>")])])])])]),t._v(" "),s("h2",{attrs:{id:"远程分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远程分支"}},[t._v("#")]),t._v(" 远程分支")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("用 "),s("code",[t._v("<remote>/<branch>")]),t._v(" 这样的形式表示远程分支")])]),t._v(" "),s("li",[s("p",[t._v("使用"),s("code",[t._v("fetch")]),t._v(" 操作下载新的远程分支")])]),t._v(" "),s("li",[s("p",[t._v("远程分支是一个无法移动的 "),s("code",[t._v("<remote>/<branch>")]),t._v(" 引用。")])]),t._v(" "),s("li",[s("p",[t._v("使用"),s("code",[t._v("git merge <remote>/<branch>")]),t._v("合并远程分支")])]),t._v(" "),s("li",[s("p",[t._v("从远程分支 "),s("code",[t._v("checkout")]),t._v(" 出来的本地分支，称为 "),s("em",[t._v("跟踪分支")]),t._v(" (tracking branch)")])]),t._v(" "),s("li",[s("p",[t._v("可以直接使用"),s("code",[t._v("push/pull")]),t._v("来操作跟踪分支")])]),t._v(" "),s("li",[s("p",[t._v("删除远程分支："),s("code",[t._v("git push <remote> :<branch>")])])])]),t._v(" "),s("h2",{attrs:{id:"分支提交历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支提交历史"}},[t._v("#")]),t._v(" 分支提交历史")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("git log")]),t._v("用于查看分支提交历史")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("选项")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("-p")])]),t._v(" "),s("td",[t._v("按补丁格式显示每个更新之间的差异。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--word-diff")])]),t._v(" "),s("td",[t._v("按 word diff 格式显示差异。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--stat")])]),t._v(" "),s("td",[t._v("显示每次更新的文件修改统计信息。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--shortstat")])]),t._v(" "),s("td",[t._v("只显示 --stat 中最后的行数修改添加移除统计。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--name-only")])]),t._v(" "),s("td",[t._v("仅在提交信息后显示已修改的文件清单。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--name-status")])]),t._v(" "),s("td",[t._v("显示新增、修改、删除的文件清单。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--abbrev-commit")])]),t._v(" "),s("td",[t._v("仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--relative-date")])]),t._v(" "),s("td",[t._v("使用较短的相对时间显示（比如，“2 weeks ago”）。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--graph")])]),t._v(" "),s("td",[t._v("显示 ASCII 图形表示的分支合并历史。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--pretty")])]),t._v(" "),s("td",[t._v("使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--oneline")])]),t._v(" "),s("td",[s("code",[t._v("--pretty=oneline --abbrev-commit")]),t._v(" 的简化用法。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("-(n)")])]),t._v(" "),s("td",[t._v("仅显示最近的 n 条提交")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--since, --after")])]),t._v(" "),s("td",[t._v("仅显示指定时间之后的提交。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--until, --before")])]),t._v(" "),s("td",[t._v("仅显示指定时间之前的提交。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--author")])]),t._v(" "),s("td",[t._v("仅显示指定作者相关的提交。")])])])]),t._v(" "),s("h2",{attrs:{id:"git-reset-checkout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-checkout"}},[t._v("#")]),t._v(" git reset,checkout")]),t._v(" "),s("h4",{attrs:{id:"git-reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("用来修改提交历史的")])]),t._v(" "),s("li",[s("p",[t._v("丢弃掉一些版本历史")]),t._v(" "),s("ul",[s("li",[t._v("不丢弃使用revert，创建一个新的commit")]),t._v(" "),s("li",[t._v("已经push到远程仓库的commit不允许reset")])])]),t._v(" "),s("li",[s("p",[t._v("参数："),s("code",[t._v("--soft")]),t._v(", "),s("code",[t._v("--mixed")]),t._v(", "),s("code",[t._v("--hard")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("改变HEAD所指向的commit("),s("code",[t._v("--soft")]),t._v(")")])]),t._v(" "),s("li",[s("p",[t._v("执行第1步，将Staging区域更新为HEAD所指向的commit里包含的内容("),s("code",[t._v("--mixed")]),t._v(")")])]),t._v(" "),s("li",[s("p",[t._v("执行第1、2步，将Working Directory区域更新为HEAD所指向的commit里包含的内容("),s("code",[t._v("--hard")]),t._v(")")])])])]),t._v(" "),s("li",[s("p",[t._v("带文件参数的reset")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("HEAD不会动")])]),t._v(" "),s("li",[s("p",[t._v("将那个commit的snapshot里的那个文件放到Index区域中")])])])])]),t._v(" "),s("h4",{attrs:{id:"git-checkout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout"}},[t._v("#")]),t._v(" git checkout")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("只改变HEAD指针")]),t._v(" "),s("ul",[s("li",[t._v("将HEAD指向那个分支的最后一次commit")]),t._v(" "),s("li",[t._v("将HEAD指向的commit里所有文件的snapshot替换掉Stage区域里原来的内容")]),t._v(" "),s("li",[t._v("将Stage区域里的内容填充到Working Directory里")])])]),t._v(" "),s("li",[s("p",[t._v("和"),s("code",[t._v("reset --hard")]),t._v("相比")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("reset会把working directory里的所有内容都更新掉")])]),t._v(" "),s("li",[s("p",[t._v("checkout不会去修改你在Working Directory里修改过的文件")])]),t._v(" "),s("li",[s("p",[t._v("reset把branch移动到HEAD指向的地方")])]),t._v(" "),s("li",[s("p",[t._v("checkout则可以HEAD移动到另一个分支")])])])]),t._v(" "),s("li",[s("p",[t._v("带文件参数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("更新了staging区域里file文件的内容")])]),t._v(" "),s("li",[s("p",[t._v("更新了working directory里file文件的内容")])])])])]),t._v(" "),s("h4",{attrs:{id:"对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对比"}},[t._v("#")]),t._v(" 对比")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("                         head    index   work dir  wd safe\nCommit Level\nreset --soft [commit]    REF     NO      NO        YES\nreset [commit]           REF     YES     NO        YES\nreset --hard [commit]    REF     YES     YES       NO\ncheckout [commit]        HEAD    YES     YES       YES\n\nFile Level\nreset (commit) [file]    NO      YES     NO        YES\ncheckout (commit) [file] NO      YES     YES       NO\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("“head”一列中的“REF”表示该命令移动了HEAD指向的分支引用，而“HEAD”则表示只移动了HEAD自身。 特别注意 “wd safe?” 一列，YES表示不会懂你在work dir的修改，NO代表会动你在work dir的修改。")]),t._v(" "),s("h2",{attrs:{id:"分支管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[t._v("#")]),t._v(" 分支管理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("master分支")]),t._v(" "),s("p",[t._v("发布分支，完全稳定的代码，即已经发布或即将发布的代码")])]),t._v(" "),s("li",[s("p",[t._v("dev分支")]),t._v(" "),s("p",[t._v("开发分支，或仅用于稳定性测试 — 当然并不是说一定要绝对稳定，不过一旦进入某种稳定状态，便可以把它合并到 "),s("code",[t._v("master")]),t._v(" 里")]),t._v(" "),s("ul",[s("li",[t._v("如果mater分支与dev分支没有分叉，可以直接fast-forward")]),t._v(" "),s("li",[t._v("如果mater分支与dev分支分叉，可以选择merge或者cherry-pick")])])]),t._v(" "),s("li",[s("p",[t._v("特性分支")]),t._v(" "),s("p",[t._v("工作分支，开发完成后可合并进"),s("code",[t._v("dev")]),t._v("分支")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://git-scm.com/figures/18333fig0319-tn.png",alt:"img"}})]),t._v(" "),s("h2",{attrs:{id:"常见的团队工作模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的团队工作模型"}},[t._v("#")]),t._v(" 常见的团队工作模型")]),t._v(" "),s("h4",{attrs:{id:"最简单的基本模型-（集中式工作流）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最简单的基本模型-（集中式工作流）"}},[t._v("#")]),t._v(" 最简单的基本模型 （集中式工作流）")]),t._v(" "),s("ol",[s("li",[t._v("git clone 一份远程仓库的代码")]),t._v(" "),s("li",[t._v("完成自己的部分后，git add + git commit 后，git push")]),t._v(" "),s("li",[t._v("如果有冲突，先 git pull 拉取远端最新的代码，在git push")])]),t._v(" "),s("h4",{attrs:{id:"功能分支工作流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#功能分支工作流"}},[t._v("#")]),t._v(" 功能分支工作流")]),t._v(" "),s("ol",[s("li",[t._v("git clone 一份远程仓库的代码")]),t._v(" "),s("li",[t._v("任何新的功能（feature）或 bug 修复全都新建一个 branch 来写；")]),t._v(" "),s("li",[t._v("将新的功能分支推送到远程仓库")]),t._v(" "),s("li",[t._v("审核、通过了以后合并到 develop 或者 release 分支，让测试测试，通过后合并至master，并删除功能分支")]),t._v(" "),s("li",[t._v("也可以使用 GitHub 的 "),s("code",[t._v("pull request")]),t._v(" 将新分支推送之远端，在GitHub上确认是否合并至 master 分支")])]),t._v(" "),s("h4",{attrs:{id:"gitflow工作流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitflow工作流"}},[t._v("#")]),t._v(" GitFlow工作流")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/9249356-65a0d2a8cb2f46f0.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"fork工作流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fork工作流"}},[t._v("#")]),t._v(" Fork工作流")])])}),[],!1,null,null,null);e.default=r.exports}}]);